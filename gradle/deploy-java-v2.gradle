/*
includes both artifactory and bintray upload tasks.

requirements
* deploy.gradle file in the projectDir:

    ext.deploy = [
        "siteUrl"           : "site url",
        "gitUrl"            : "git url",
        "groupId"           : "package name",
        "licenseName"       : "MIT",
        "licenseUrl"        : "https ://opensource.org/licenses/MIT",
        "id"                : "the package id"
    ]

    it should be loaded with "apply from: '$projectDir/deploy.gradle"'

* defined ext.ver."$deploy.id" or "version", eg
version = 1.0

* ~/.gradle/gradle.properties file with repo credentials
    devReadUser=
    devReadPassword=
    hmBintrayUser=
    hmBintrayApikey=
    hmArtifactoryPublishUser=
    hmArtifactoryPublishPassword=
    hmArtifactoryUrl=


Release process:

* update ext.ver values in *all* build.gradle or use -Pversion property

* Call `./gradlew publish` to release all the packages to dev jfrog repo.
* Call `./gradlew :hmkit-utils:publish` to release a specific package.
* Call `./gradlew :hmkit-utils:publish -Prepo=gradle-release-local` to specify the jfrog repo.

If releasing to bintray, first test the release with scaffold from release-local, then
call `./gradlew bintrayUpload`.

If pushing the same version number, the package will be overwritten in dev, rejected in release.

For example, publish utils to release-local and bintray, using the ext.ver value
```
./gradlew :hmkit-utils:publish -Prepo=gradle-release-local
./gradlew :hmkit-utils:bintrayUpload
```
*/

if (project.hasProperty("hmArtifactoryUrl")) {
    apply plugin: "maven-publish"
    apply plugin: 'com.jfrog.bintray'

    java {
        withJavadocJar()
        withSourcesJar()
    }

    // use either ver."$deploy.id" or version
    def deployVersion = ver."$deploy.id"
    if (deployVersion == null) deployVersion = project.version

    // use release dependencies
    def runTasks = gradle.startParameter.taskNames.toString()
    if (runTasks.contains("publish") || runTasks.contains("bintrayUpload")) {
        project.rootProject.ext.setProperty("depLocation", 1)
    }

    publishing {
        repositories {
            maven {
                name = 'artifactory'
                def repoKey = project.hasProperty('repo') ? project.repo : "gradle-dev-local"
                url = "$hmArtifactoryUrl/$repoKey"
                credentials {
                    username hmArtifactoryPublishUser
                    password hmArtifactoryPublishPassword
                }
            }
        }

        publications {
            mavenJava(MavenPublication) {
                from components.java

                pom {
                    groupId = deploy.groupId
                    artifactId = deploy.id
                    version = deployVersion
                    name = deploy.id
                    url = deploy.siteUrl
                    inceptionYear = '2018'
                    licenses {
                        license {
                            name = deploy.licenseName
                            url = deploy.licenseUrl
                        }
                    }
                    scm {
                        connection = deploy.gitUrl
                        developerConnection = deploy.gitUrl
                        url = deploy.siteUrl
                    }
                }
            }
        }
    }

    bintray {
        user = hmBintrayUser
        key = hmBintrayApikey

        publications = ['mavenJava']
        pkg {
            repo = "maven"
            name = deploy.id
            websiteUrl = deploy.siteUrl
            vcsUrl = deploy.gitUrl
            licenses = deploy.licenseName

            version {
                name = deployVersion
            }
        }
    }
}
else {
    println("Credentials don't exist for publishing")
}
